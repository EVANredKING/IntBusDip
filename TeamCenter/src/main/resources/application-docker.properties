# Конфигурация базы данных H2
spring.datasource.url=jdbc:h2:file:/app/data/teamcenterdb;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Настройка Hibernate и SQL инициализации
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Отключаем явную инициализацию схемы, так как используем Hibernate DDL auto
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false

# Включение консоли H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

logging.level.root=INFO
logging.level.com.teamcenter=DEBUG
logging.file.name=/app/logs/application.log

server.port=3000
server.servlet.context-path=/

spring.security.user.name=admin
spring.security.user.password=password

server.servlet.session.timeout=30m

# Разрешить переопределение бинов
spring.main.allow-bean-definition-overriding=true

# Настройки для подключения к IntBus (используем имена сервисов из docker-compose)
intbus.sync.url=http://intbus:8000/api/sync-from-intbus/
intbus.sync.fallback-urls=http://intbus:8000/api/sync-from-intbus/
intbus.csrf.url=http://intbus:8000/api/csrf-token/
intbus.http.max-retries=3
intbus.apikey=TEAMCENTER-INTBUS-KEY
intbus.sender=TeamCenter

# Настройки HTTP соединений
intbus.http.connect-timeout=30000
intbus.http.read-timeout=30000
intbus.http.connection-request-timeout=30000

# Настройки CORS для Docker-среды
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Временное отключение CSRF-защиты для отладки
app.security.disable-csrf=true

# Дополнительные настройки для CSRF и безопасности
app.csrf.enabled=false
app.csrf.djangoMode=true
app.csrf.headerName=X-CSRFToken
app.csrf.cookieName=csrftoken 