2025-04-07 22:31:45 [http-nio-8080-exec-3] ERROR c.t.a.c.NomenclatureController - Ошибка при выполнении HTTP-запроса: 400 Bad Request: "{"status": "error", "message": "\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u0443\u0441\u0442\u043e\u0435"}<!DOCTYPE HTML><EOL><html lang="en"><EOL>    <head><EOL>        <meta charset="utf-8"><EOL>        <title>Error response</title><EOL>    </head><EOL>    <body><EOL>        <h1>Error response</h1><EOL>        <p>Error code: 400</p><EOL>        <p>Message: Bad request syntax ('dd').</p><EOL>        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p><EOL>    </body><EOL></html><EOL>"
2025-04-07 22:31:45 [http-nio-8080-exec-3] ERROR c.t.a.c.NomenclatureController - Тип ошибки: org.springframework.web.client.HttpClientErrorException$BadRequest
org.springframework.web.client.HttpClientErrorException$BadRequest: 400 Bad Request: "{"status": "error", "message": "\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u0443\u0441\u0442\u043e\u0435"}<!DOCTYPE HTML><EOL><html lang="en"><EOL>    <head><EOL>        <meta charset="utf-8"><EOL>        <title>Error response</title><EOL>    </head><EOL>    <body><EOL>        <h1>Error response</h1><EOL>        <p>Error code: 400</p><EOL>        <p>Message: Bad request syntax ('dd').</p><EOL>        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p><EOL>    </body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:103)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:170)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:35:22 [http-nio-8080-exec-7] ERROR c.t.a.c.NomenclatureController - Ошибка при выполнении HTTP-запроса: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL>  <p>You are seeing this message because this site requires a CSRF cookie when submitting forms. This cookie is required for security reasons, to ensure that your browser is not being hijacked by third parties.</p><EOL>  <p>If you have configured your browser to disable cookies, please re-enable them, at least for this site, or for “same-origin” requests.</p><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie not set.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
2025-04-07 22:35:22 [http-nio-8080-exec-7] ERROR c.t.a.c.NomenclatureController - Тип ошибки: org.springframework.web.client.HttpClientErrorException$Forbidden
org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL>  <p>You are seeing this message because this site requires a CSRF cookie when submitting forms. This cookie is required for security reasons, to ensure that your browser is not being hijacked by third parties.</p><EOL>  <p>If you have configured your browser to disable cookies, please re-enable them, at least for this site, or for “same-origin” requests.</p><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie not set.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:167)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:39:21 [http-nio-8080-exec-7] ERROR c.t.app.service.IntBusService - Ошибка при отправке данных в IntBus: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:39:21 [http-nio-8080-exec-7] ERROR c.t.a.c.NomenclatureController - Ошибка при отправке данных в IntBus: Ошибка при отправке данных в IntBus: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
java.lang.RuntimeException: Ошибка при отправке данных в IntBus: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:74)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	... 93 common frames omitted
2025-04-07 22:44:57 [http-nio-8080-exec-5] ERROR c.t.app.service.CsrfTokenService - Ошибка при получении CSRF-токена: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at com.teamcenter.app.service.CsrfTokenService.fetchCsrfToken(CsrfTokenService.java:64)
	at com.teamcenter.app.service.CsrfTokenService.getCsrfToken(CsrfTokenService.java:41)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:43)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:44:57 [http-nio-8080-exec-5] ERROR c.t.app.service.IntBusService - Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:44:57 [http-nio-8080-exec-5] ERROR c.t.a.c.NomenclatureController - Ошибка при отправке данных в IntBus: Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
java.lang.RuntimeException: Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:74)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	... 93 common frames omitted
2025-04-07 22:45:05 [http-nio-8080-exec-4] ERROR c.t.app.service.CsrfTokenService - Ошибка при получении CSRF-токена: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at com.teamcenter.app.service.CsrfTokenService.fetchCsrfToken(CsrfTokenService.java:64)
	at com.teamcenter.app.service.CsrfTokenService.getCsrfToken(CsrfTokenService.java:41)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:43)
	at com.teamcenter.app.controller.LSIController.sendToIntBus(LSIController.java:130)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:45:05 [http-nio-8080-exec-4] ERROR c.t.app.service.IntBusService - Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	at com.teamcenter.app.controller.LSIController.sendToIntBus(LSIController.java:130)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:45:05 [http-nio-8080-exec-4] ERROR c.t.app.controller.LSIController - Ошибка при отправке данных в IntBus: Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
java.lang.RuntimeException: Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:74)
	at com.teamcenter.app.controller.LSIController.sendToIntBus(LSIController.java:130)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	... 93 common frames omitted
2025-04-07 22:45:11 [http-nio-8080-exec-7] ERROR c.t.app.service.CsrfTokenService - Ошибка при получении CSRF-токена: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at com.teamcenter.app.service.CsrfTokenService.fetchCsrfToken(CsrfTokenService.java:64)
	at com.teamcenter.app.service.CsrfTokenService.getCsrfToken(CsrfTokenService.java:41)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:43)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:45:11 [http-nio-8080-exec-7] ERROR c.t.app.service.IntBusService - Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:45:11 [http-nio-8080-exec-7] ERROR c.t.a.c.NomenclatureController - Ошибка при отправке данных в IntBus: Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
java.lang.RuntimeException: Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:74)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	... 93 common frames omitted
2025-04-07 22:45:16 [http-nio-8080-exec-1] ERROR c.t.app.service.CsrfTokenService - Ошибка при получении CSRF-токена: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at com.teamcenter.app.service.CsrfTokenService.fetchCsrfToken(CsrfTokenService.java:64)
	at com.teamcenter.app.service.CsrfTokenService.getCsrfToken(CsrfTokenService.java:41)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:43)
	at com.teamcenter.app.controller.LSIController.sendToIntBus(LSIController.java:130)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:45:16 [http-nio-8080-exec-1] ERROR c.t.app.service.IntBusService - Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	at com.teamcenter.app.controller.LSIController.sendToIntBus(LSIController.java:130)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:45:16 [http-nio-8080-exec-1] ERROR c.t.app.controller.LSIController - Ошибка при отправке данных в IntBus: Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
java.lang.RuntimeException: Ошибка при отправке данных в IntBus: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:74)
	at com.teamcenter.app.controller.LSIController.sendToIntBus(LSIController.java:130)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: org.springframework.web.client.HttpClientErrorException$Forbidden: 403 Forbidden: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <title>403 Forbidden</title><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body>div { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 span { font-size:60%; color:#666; font-weight:normal; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ul { margin: 0.5em 4em; }<EOL>    #info p, #summary p { padding-top:10px; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>  </style><EOL></head><EOL><body><EOL><div id="summary"><EOL>  <h1>Forbidden <span>(403)</span></h1><EOL>  <p>CSRF verification failed. Request aborted.</p><EOL><EOL><EOL></div><EOL><EOL><div id="info"><EOL>  <h2>Help</h2><EOL>    <EOL>    <p>Reason given for failure:</p><EOL>    <pre><EOL>    CSRF cookie has incorrect length.<EOL>    </pre><EOL>    <EOL><EOL>  <p>In general, this can occur when there is a genuine Cross Site Request Forgery, or when<EOL>  <a<EOL>  href="https://docs.djangoproject.com/en/5.2/ref/csrf/">Django’s<EOL>  CSRF mechanism</a> has not been used correctly.  For POST forms, you need to<EOL>  ensure:</p><EOL><EOL>  <ul><EOL>    <li>Your browser is accepting cookies.</li><EOL><EOL>    <li>The view function passes a <code>request</code> to the template’s <a<EOL>    href="https://docs.djangoproject.com/en/5.2/topics/templates/#django.template.backends.base.Template.render"><code>render</code></a><EOL>    method.</li><EOL><EOL>    <li>In the template, there is a <code>{% csrf_token<EOL>    %}</code> template tag inside each POST form that<EOL>    targets an internal URL.</li><EOL><EOL>    <li>If you are not using <code>CsrfViewMiddleware</code>, then you must use<EOL>    <code>csrf_protect</code> on any views that use the <code>csrf_token</code><EOL>    template tag, as well as those that accept the POST data.</li><EOL><EOL>    <li>The form has a valid CSRF token. After logging in in another browser<EOL>    tab or hitting the back button after a login, you may need to reload the<EOL>    page with the form, because the token is rotated after a login.</li><EOL>  </ul><EOL><EOL>  <p>You’re seeing the help section of this page because you have <code>DEBUG =<EOL>  True</code> in your Django settings file. Change that to <code>False</code>,<EOL>  and only the initial error message will be displayed.  </p><EOL><EOL>  <p>You can customize this page using the CSRF_FAILURE_VIEW setting.</p><EOL></div><EOL><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:109)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:63)
	... 93 common frames omitted
2025-04-07 22:48:21 [http-nio-8080-exec-7] ERROR c.t.app.service.CsrfTokenService - Ошибка при получении CSRF-токена: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>GET</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at com.teamcenter.app.service.CsrfTokenService.fetchCsrfToken(CsrfTokenService.java:64)
	at com.teamcenter.app.service.CsrfTokenService.getCsrfToken(CsrfTokenService.java:41)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:43)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:48:21 [http-nio-8080-exec-7] ERROR c.t.app.service.IntBusService - Не удалось получить CSRF-токен для запроса
2025-04-07 22:48:21 [http-nio-8080-exec-7] ERROR c.t.app.service.IntBusService - Ошибка при отправке данных в IntBus: Не удалось получить CSRF-токен для запроса в IntBus
java.lang.RuntimeException: Не удалось получить CSRF-токен для запроса в IntBus
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:46)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:48:21 [http-nio-8080-exec-7] ERROR c.t.a.c.NomenclatureController - Ошибка при отправке данных в IntBus: Ошибка при отправке данных в IntBus: Не удалось получить CSRF-токен для запроса в IntBus
java.lang.RuntimeException: Ошибка при отправке данных в IntBus: Не удалось получить CSRF-токен для запроса в IntBus
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:85)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.lang.RuntimeException: Не удалось получить CSRF-токен для запроса в IntBus
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:46)
	... 93 common frames omitted
2025-04-07 22:52:32 [http-nio-8080-exec-2] ERROR c.t.app.service.IntBusService - HTTP ошибка при отправке запроса: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL><!DOCTYPE HTML><EOL><html lang="en"><EOL>    <head><EOL>        <meta charset="utf-8"><EOL>        <title>Error response</title><EOL>    </head><EOL>    <body><EOL>        <h1>Error response</h1><EOL>        <p>Error code: 400</p><EOL>        <p>Message: Bad request syntax ('dd').</p><EOL>        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p><EOL>    </body><EOL></html><EOL>". Статус: 404 NOT_FOUND, Тело: <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /sync/api/sync</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre>
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>POST</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://localhost:8081/sync/api/sync</td>
      </tr>
      
      <tr>
        <th scope="row">Raised by:</th>
        <td>django.views.static.serve</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>intbus_project.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                accounts/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                login/
                [name='login']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                logout/
                [name='logout']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                register/
                [name='register']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                
                [name='home']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                nomenclature/
                [name='nomenclature_list']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                lsi/
                [name='lsi_list']
              </code>
            
          </li>
        
          <li>
            
              <code>
                sync/
                
              </code>
            
              <code>
                api/sync/
                [name='sync_data']
              </code>
            
          </li>
        
          <li>
            
              <code>
                ^static/(?P&lt;path&gt;.*)$
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                ^(?P&lt;path&gt;.*)$
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>sync/api/sync</code>,
        
        matched the last one.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
<!DOCTYPE HTML>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Error response</title>
    </head>
    <body>
        <h1>Error response</h1>
        <p>Error code: 400</p>
        <p>Message: Bad request syntax ('dd').</p>
        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p>
    </body>
</html>

org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL><!DOCTYPE HTML><EOL><html lang="en"><EOL>    <head><EOL>        <meta charset="utf-8"><EOL>        <title>Error response</title><EOL>    </head><EOL>    <body><EOL>        <h1>Error response</h1><EOL>        <p>Error code: 400</p><EOL>        <p>Message: Bad request syntax ('dd').</p><EOL>        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p><EOL>    </body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:106)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:52:32 [http-nio-8080-exec-2] ERROR c.t.a.c.NomenclatureController - Ошибка ответа: <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /sync/api/sync</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre>
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>POST</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://localhost:8081/sync/api/sync</td>
      </tr>
      
      <tr>
        <th scope="row">Raised by:</th>
        <td>django.views.static.serve</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>intbus_project.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                accounts/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                login/
                [name='login']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                logout/
                [name='logout']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                register/
                [name='register']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                
                [name='home']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                nomenclature/
                [name='nomenclature_list']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                lsi/
                [name='lsi_list']
              </code>
            
          </li>
        
          <li>
            
              <code>
                sync/
                
              </code>
            
              <code>
                api/sync/
                [name='sync_data']
              </code>
            
          </li>
        
          <li>
            
              <code>
                ^static/(?P&lt;path&gt;.*)$
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                ^(?P&lt;path&gt;.*)$
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>sync/api/sync</code>,
        
        matched the last one.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>
<!DOCTYPE HTML>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Error response</title>
    </head>
    <body>
        <h1>Error response</h1>
        <p>Error code: 400</p>
        <p>Message: Bad request syntax ('dd').</p>
        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p>
    </body>
</html>

2025-04-07 22:55:57 [http-nio-8080-exec-6] ERROR c.t.app.service.IntBusService - HTTP ошибка при отправке запроса: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>". Статус: 404 NOT_FOUND, Тело: <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /sync/api/sync</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre>
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>POST</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://localhost:8081/sync/api/sync</td>
      </tr>
      
      <tr>
        <th scope="row">Raised by:</th>
        <td>django.views.static.serve</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>intbus_project.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                accounts/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                login/
                [name='login']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                logout/
                [name='logout']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                register/
                [name='register']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                
                [name='home']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                nomenclature/
                [name='nomenclature_list']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                lsi/
                [name='lsi_list']
              </code>
            
          </li>
        
          <li>
            
              <code>
                sync/
                
              </code>
            
              <code>
                api/sync/
                [name='sync_data']
              </code>
            
          </li>
        
          <li>
            
              <code>
                ^static/(?P&lt;path&gt;.*)$
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                ^(?P&lt;path&gt;.*)$
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>sync/api/sync</code>,
        
        matched the last one.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

org.springframework.web.client.HttpClientErrorException$NotFound: 404 Not Found: "<!DOCTYPE html><EOL><html lang="en"><EOL><head><EOL>  <meta http-equiv="content-type" content="text/html; charset=utf-8"><EOL>  <title>Page not found at /sync/api/sync</title><EOL>  <meta name="robots" content="NONE,NOARCHIVE"><EOL>  <style><EOL>    html * { padding:0; margin:0; }<EOL>    body * { padding:10px 20px; }<EOL>    body * * { padding:0; }<EOL>    body { font-family: sans-serif; background:#eee; color:#000; }<EOL>    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }<EOL>    h1 { font-weight:normal; margin-bottom:.4em; }<EOL>    h1 small { font-size:60%; color:#666; font-weight:normal; }<EOL>    table { border:none; border-collapse: collapse; width:100%; }<EOL>    td, th { vertical-align:top; padding:2px 3px; }<EOL>    th { width:12em; text-align:right; color:#666; padding-right:.5em; }<EOL>    #info { background:#f6f6f6; }<EOL>    #info ol { margin: 0.5em 4em; }<EOL>    #info ol li { font-family: monospace; }<EOL>    #summary { background: #ffc; }<EOL>    #explanation { background:#eee; border-bottom: 0px none; }<EOL>    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }<EOL>  </style><EOL></head><EOL><body><EOL>  <header id="summary"><EOL>    <h1>Page not found <small>(404)</small></h1><EOL>    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre><EOL>    <table class="meta"><EOL>      <tr><EOL>        <th scope="row">Request Method:</th><EOL>        <td>POST</td><EOL>      </tr><EOL>      <tr><EOL>        <th scope="row">Request URL:</th><EOL>        <td>http://localhost:8081/sync/api/sync</td><EOL>      </tr><EOL>      <EOL>      <tr><EOL>        <th scope="row">Raised by:</th><EOL>        <td>django.views.static.serve</td><EOL>      </tr><EOL>      <EOL>    </table><EOL>  </header><EOL><EOL>  <main id="info"><EOL>    <EOL>      <p><EOL>      Using the URLconf defined in <code>intbus_project.urls</code>,<EOL>      Django tried these URL patterns, in this order:<EOL>      </p><EOL>      <ol><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                admin/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                accounts/<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                login/<EOL>                [name='login']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                logout/<EOL>                [name='logout']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                register/<EOL>                [name='register']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                <EOL>                [name='home']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                nomenclature/<EOL>                [name='nomenclature_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                <EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                lsi/<EOL>                [name='lsi_list']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                sync/<EOL>                <EOL>              </code><EOL>            <EOL>              <code><EOL>                api/sync/<EOL>                [name='sync_data']<EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^static/(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>          <li><EOL>            <EOL>              <code><EOL>                ^(?P&lt;path&gt;.*)$<EOL>                <EOL>              </code><EOL>            <EOL>          </li><EOL>        <EOL>      </ol><EOL>      <p><EOL>        <EOL>          The current path, <code>sync/api/sync</code>,<EOL>        <EOL>        matched the last one.<EOL>      </p><EOL>    <EOL>  </main><EOL><EOL>  <footer id="explanation"><EOL>    <p><EOL>      You’re seeing this error because you have <code>DEBUG = True</code> in<EOL>      your Django settings file. Change that to <code>False</code>, and Django<EOL>      will display a standard 404 page.<EOL>    </p><EOL>  </footer><EOL></body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:112)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:106)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:55:57 [http-nio-8080-exec-6] ERROR c.t.a.c.NomenclatureController - Ошибка ответа: <!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <title>Page not found at /sync/api/sync</title>
  <meta name="robots" content="NONE,NOARCHIVE">
  <style>
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font-family: sans-serif; background:#eee; color:#000; }
    body > :where(header, main, footer) { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; margin-bottom:.4em; }
    h1 small { font-size:60%; color:#666; font-weight:normal; }
    table { border:none; border-collapse: collapse; width:100%; }
    td, th { vertical-align:top; padding:2px 3px; }
    th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    #info { background:#f6f6f6; }
    #info ol { margin: 0.5em 4em; }
    #info ol li { font-family: monospace; }
    #summary { background: #ffc; }
    #explanation { background:#eee; border-bottom: 0px none; }
    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
</head>
<body>
  <header id="summary">
    <h1>Page not found <small>(404)</small></h1>
    <pre class="exception_value">“C:\Users\RED KING\IntBusDip\IntBus\sync\api\sync” does not exist</pre>
    <table class="meta">
      <tr>
        <th scope="row">Request Method:</th>
        <td>POST</td>
      </tr>
      <tr>
        <th scope="row">Request URL:</th>
        <td>http://localhost:8081/sync/api/sync</td>
      </tr>
      
      <tr>
        <th scope="row">Raised by:</th>
        <td>django.views.static.serve</td>
      </tr>
      
    </table>
  </header>

  <main id="info">
    
      <p>
      Using the URLconf defined in <code>intbus_project.urls</code>,
      Django tried these URL patterns, in this order:
      </p>
      <ol>
        
          <li>
            
              <code>
                admin/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                accounts/
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                login/
                [name='login']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                logout/
                [name='logout']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                register/
                [name='register']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                
                [name='home']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                nomenclature/
                [name='nomenclature_list']
              </code>
            
          </li>
        
          <li>
            
              <code>
                
                
              </code>
            
              <code>
                lsi/
                [name='lsi_list']
              </code>
            
          </li>
        
          <li>
            
              <code>
                sync/
                
              </code>
            
              <code>
                api/sync/
                [name='sync_data']
              </code>
            
          </li>
        
          <li>
            
              <code>
                ^static/(?P&lt;path&gt;.*)$
                
              </code>
            
          </li>
        
          <li>
            
              <code>
                ^(?P&lt;path&gt;.*)$
                
              </code>
            
          </li>
        
      </ol>
      <p>
        
          The current path, <code>sync/api/sync</code>,
        
        matched the last one.
      </p>
    
  </main>

  <footer id="explanation">
    <p>
      You’re seeing this error because you have <code>DEBUG = True</code> in
      your Django settings file. Change that to <code>False</code>, and Django
      will display a standard 404 page.
    </p>
  </footer>
</body>
</html>

2025-04-07 22:56:46 [http-nio-8080-exec-5] ERROR c.t.app.service.IntBusService - HTTP ошибка при отправке запроса: 400 Bad Request: "{"status": "error", "message": "\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u0443\u0441\u0442\u043e\u0435"}<!DOCTYPE HTML><EOL><html lang="en"><EOL>    <head><EOL>        <meta charset="utf-8"><EOL>        <title>Error response</title><EOL>    </head><EOL>    <body><EOL>        <h1>Error response</h1><EOL>        <p>Error code: 400</p><EOL>        <p>Message: Bad request syntax ('dd').</p><EOL>        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p><EOL>    </body><EOL></html><EOL>". Статус: 400 BAD_REQUEST, Тело: {"status": "error", "message": "\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u0443\u0441\u0442\u043e\u0435"}<!DOCTYPE HTML>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Error response</title>
    </head>
    <body>
        <h1>Error response</h1>
        <p>Error code: 400</p>
        <p>Message: Bad request syntax ('dd').</p>
        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p>
    </body>
</html>

org.springframework.web.client.HttpClientErrorException$BadRequest: 400 Bad Request: "{"status": "error", "message": "\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u0443\u0441\u0442\u043e\u0435"}<!DOCTYPE HTML><EOL><html lang="en"><EOL>    <head><EOL>        <meta charset="utf-8"><EOL>        <title>Error response</title><EOL>    </head><EOL>    <body><EOL>        <h1>Error response</h1><EOL>        <p>Error code: 400</p><EOL>        <p>Message: Bad request syntax ('dd').</p><EOL>        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p><EOL>    </body><EOL></html><EOL>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:103)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:538)
	at com.teamcenter.app.service.IntBusService.sendDataToIntBus(IntBusService.java:106)
	at com.teamcenter.app.controller.NomenclatureController.sendToIntBus(NomenclatureController.java:141)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-04-07 22:56:46 [http-nio-8080-exec-5] ERROR c.t.a.c.NomenclatureController - Ошибка ответа: {"status": "error", "message": "\u0422\u0435\u043b\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u0443\u0441\u0442\u043e\u0435"}<!DOCTYPE HTML>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Error response</title>
    </head>
    <body>
        <h1>Error response</h1>
        <p>Error code: 400</p>
        <p>Message: Bad request syntax ('dd').</p>
        <p>Error code explanation: 400 - Bad request syntax or unsupported method.</p>
    </body>
</html>

