{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import'bootstrap/dist/css/bootstrap.min.css';import'./index.css';import App from'./App';import reportWebVitals from'./reportWebVitals';import axios from'axios';// Настройка axios для работы с CSRF\nimport{jsx as _jsx}from\"react/jsx-runtime\";axios.defaults.withCredentials=true;// Получаем CSRF токен из cookies\nconst getCsrfToken=()=>{var _document$cookie$spli;return(_document$cookie$spli=document.cookie.split('; ').find(row=>row.startsWith('XSRF-TOKEN=')))===null||_document$cookie$spli===void 0?void 0:_document$cookie$spli.split('=')[1];};// Добавляем перехватчик для всех запросов\naxios.interceptors.request.use(config=>{const token=getCsrfToken();if(token){config.headers['X-XSRF-TOKEN']=token;}// Всегда добавляем заголовок для AJAX-запросов\nconfig.headers['X-Requested-With']='XMLHttpRequest';return config;});const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","axios","jsx","_jsx","defaults","withCredentials","getCsrfToken","_document$cookie$spli","document","cookie","split","find","row","startsWith","interceptors","request","use","config","token","headers","root","createRoot","getElementById","render","StrictMode","children"],"sources":["C:/Users/RED KING/IntBusDip/TeamCenter/frontend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport axios from 'axios';\r\n\r\n// Настройка axios для работы с CSRF\r\naxios.defaults.withCredentials = true;\r\n\r\n// Получаем CSRF токен из cookies\r\nconst getCsrfToken = () => {\r\n  return document.cookie\r\n    .split('; ')\r\n    .find(row => row.startsWith('XSRF-TOKEN='))\r\n    ?.split('=')[1];\r\n};\r\n\r\n// Добавляем перехватчик для всех запросов\r\naxios.interceptors.request.use(config => {\r\n  const token = getCsrfToken();\r\n  if (token) {\r\n    config.headers['X-XSRF-TOKEN'] = token;\r\n  }\r\n  \r\n  // Всегда добавляем заголовок для AJAX-запросов\r\n  config.headers['X-Requested-With'] = 'XMLHttpRequest';\r\n  \r\n  return config;\r\n});\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(); "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,sCAAsC,CAC7C,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACAF,KAAK,CAACG,QAAQ,CAACC,eAAe,CAAG,IAAI,CAErC;AACA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,KAAAC,qBAAA,CACzB,OAAAA,qBAAA,CAAOC,QAAQ,CAACC,MAAM,CACnBC,KAAK,CAAC,IAAI,CAAC,CACXC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,UAAU,CAAC,aAAa,CAAC,CAAC,UAAAN,qBAAA,iBAFtCA,qBAAA,CAGHG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACnB,CAAC,CAED;AACAT,KAAK,CAACa,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,EAAI,CACvC,KAAM,CAAAC,KAAK,CAAGZ,YAAY,CAAC,CAAC,CAC5B,GAAIY,KAAK,CAAE,CACTD,MAAM,CAACE,OAAO,CAAC,cAAc,CAAC,CAAGD,KAAK,CACxC,CAEA;AACAD,MAAM,CAACE,OAAO,CAAC,kBAAkB,CAAC,CAAG,gBAAgB,CAErD,MAAO,CAAAF,MAAM,CACf,CAAC,CAAC,CAEF,KAAM,CAAAG,IAAI,CAAGtB,QAAQ,CAACuB,UAAU,CAACb,QAAQ,CAACc,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEF,IAAI,CAACG,MAAM,cACTpB,IAAA,CAACN,KAAK,CAAC2B,UAAU,EAAAC,QAAA,cACftB,IAAA,CAACJ,GAAG,GAAE,CAAC,CACS,CACpB,CAAC,CAED;AACA;AACA;AACAC,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}